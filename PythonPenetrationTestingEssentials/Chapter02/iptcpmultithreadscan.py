import platform
import socket
from datetime import datetime
from netaddr import IPNetwork
import threading

class ScanThread(threading.Thread):
    def __init__(self, ipRange):
        threading.Thread.__init__(self)
        self.ipRange = ipRange

    def run(self):
        for ip in self.ipRange:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(1)
            result = s.connect_ex((str(ip), port))

            if (result == 0):
                results.append(str(ip))

port = 135

threads = []
results = []
osVersion = platform.system()
networkInput = raw_input("Enter the network to scan (Ex: 192.168.1.0/24): ")
numberOfThreads = raw_input("Enter the of desired threads (Ex: 5): ")

network = IPNetwork(networkInput)
chunkSize = network.size / int(numberOfThreads)

startTime = datetime.now()

try:
    print "Scan in progress..."

    networkIps = list(network)

    for i in [networkIps[i : i + chunkSize] for i in xrange(0, network.size, chunkSize)]:
        thread = ScanThread(i)
        thread.start()
        threads.append(thread)
except:
    print "Error: unable to start thread"

for t in threads:
  t.join()

results.sort()

for key in results:
  print key, "--> Live"

endTime = datetime.now()
totalTime = endTime - startTime

print "Scanning complete in ", totalTime
